{"ast":null,"code":"var _jsxFileName = \"/Users/mj/Downloads/mini_project-main/formeT website/src/routes/Pick.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"../api/axios\";\nimport styled from \"styled-components\";\nimport GenreFilter from \"../component/GenreFilter\";\nimport RatingFilter from \"../component/RatingFilter\";\nimport YearFilter from \"../component/YearFilter\";\nimport MovieCard from \"../component/MovieCard\";\nimport Nav from \"../component/Nav\";\nimport \"./Pick.css\";\nimport NavFunction from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pick() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [selectedRating, setSelectedRating] = useState(0);\n  const [selectedYear, setSelectedYear] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  NavFunction();\n  useEffect(() => {\n    async function fetchPagesInRange() {\n      const apiKey = \"42792e702bdfaa79e4dcffe831c6aa8b\";\n      const baseUrl = `https://api.themoviedb.org/3/discover/movie`;\n      const language = \"en-US\";\n      const pages = [];\n      for (let page = 1; page <= 7; page++) {\n        const response = await axios.get(`${baseUrl}?api_key=${apiKey}&language=${language}&page=${page}`);\n        pages.push(response.data.results);\n        console.log(pages);\n      }\n      setMovies(pages.flat());\n      setLoading(false);\n    }\n    fetchPagesInRange().catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageTitle, {\n    className: \"pick\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      children: [/*#__PURE__*/_jsxDEV(FilterColumn, {\n        children: /*#__PURE__*/_jsxDEV(GenreFilter, {\n          selectedGenres: selectedGenres,\n          onSelectGenres: setSelectedGenres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterColumn, {\n        children: /*#__PURE__*/_jsxDEV(RatingFilter, {\n          selectedRating: selectedRating,\n          onSelectRating: setSelectedRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterColumn, {\n        children: /*#__PURE__*/_jsxDEV(YearFilter, {\n          selectedYear: selectedYear,\n          onSelectYear: setSelectedYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : movies.length > 0 ? movies.filter(movie => {\n        const genreMatches = selectedGenres.length === 0 || movie.genre_ids.some(genreId => selectedGenres.includes(genreId));\n        const ratingMatches = movie.vote_average >= selectedRating;\n        const yearMatches = selectedYear === \"\" || new Date(movie.release_date).getFullYear().toString() === selectedYear;\n        return genreMatches && ratingMatches && yearMatches;\n      }).map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\\uD83D\\uDE22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Pick, \"C1l7knZwDCeKKd7qb09sdHIjeKc=\");\n_c = Pick;\nconst PageTitle = styled.div`\n  h1 {\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    font-size: 3.5rem;\n    text-shadow: #fff 1px 0 5px;\n  }\n`;\n_c2 = PageTitle;\nconst Filters = styled.div`\n  border: 1px solid #e3e3e3;\n  background-color: #8a2be2;\n  border-radius: 10px;\n  display: flex;\n  margin: 6rem auto;\n  width: 85%;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c3 = Filters;\nconst FilterColumn = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n`;\n_c4 = FilterColumn;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Pick\");\n$RefreshReg$(_c2, \"PageTitle\");\n$RefreshReg$(_c3, \"Filters\");\n$RefreshReg$(_c4, \"FilterColumn\");","map":{"version":3,"names":["useState","useEffect","axios","styled","GenreFilter","RatingFilter","YearFilter","MovieCard","Nav","NavFunction","jsxDEV","_jsxDEV","Pick","_s","movies","setMovies","selectedGenres","setSelectedGenres","selectedRating","setSelectedRating","selectedYear","setSelectedYear","loading","setLoading","fetchPagesInRange","apiKey","baseUrl","language","pages","page","response","get","push","data","results","console","log","flat","catch","error","PageTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Filters","FilterColumn","onSelectGenres","onSelectRating","onSelectYear","length","filter","movie","genreMatches","genre_ids","some","genreId","includes","ratingMatches","vote_average","yearMatches","Date","release_date","getFullYear","toString","map","id","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/mj/Downloads/mini_project-main/formeT website/src/routes/Pick.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"../api/axios\";\nimport styled from \"styled-components\";\nimport GenreFilter from \"../component/GenreFilter\";\nimport RatingFilter from \"../component/RatingFilter\";\nimport YearFilter from \"../component/YearFilter\";\nimport MovieCard from \"../component/MovieCard\";\nimport Nav from \"../component/Nav\";\nimport \"./Pick.css\";\nimport NavFunction from \"./Home\";\n\nexport default function Pick() {\n  const [movies, setMovies] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [selectedRating, setSelectedRating] = useState(0);\n  const [selectedYear, setSelectedYear] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  NavFunction();\n\n  useEffect(() => {\n    async function fetchPagesInRange() {\n      const apiKey = \"42792e702bdfaa79e4dcffe831c6aa8b\";\n      const baseUrl = `https://api.themoviedb.org/3/discover/movie`;\n      const language = \"en-US\";\n\n      const pages = [];\n      for (let page = 1; page <= 7; page++) {\n        const response = await axios.get(\n          `${baseUrl}?api_key=${apiKey}&language=${language}&page=${page}`\n        );\n        pages.push(response.data.results);\n        console.log(pages);\n      }\n      setMovies(pages.flat());\n      setLoading(false);\n    }\n\n    fetchPagesInRange().catch((error) => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  return (\n    <PageTitle className=\"pick\">\n      {/* <div className=\"nav__container\"> */}\n      <Nav />\n      {/* </div> */}\n\n      <Filters>\n        <FilterColumn>\n          <GenreFilter\n            selectedGenres={selectedGenres}\n            onSelectGenres={setSelectedGenres}\n          />\n        </FilterColumn>\n        <FilterColumn>\n          <RatingFilter\n            selectedRating={selectedRating}\n            onSelectRating={setSelectedRating}\n          />\n        </FilterColumn>\n        <FilterColumn>\n          <YearFilter\n            selectedYear={selectedYear}\n            onSelectYear={setSelectedYear}\n          />\n        </FilterColumn>\n      </Filters>\n      <div className=\"movie-list\">\n        {loading ? (\n          <p>Loading..</p>\n        ) : movies.length > 0 ? (\n          movies\n            .filter((movie) => {\n              const genreMatches =\n                selectedGenres.length === 0 ||\n                movie.genre_ids.some((genreId) =>\n                  selectedGenres.includes(genreId)\n                );\n              const ratingMatches = movie.vote_average >= selectedRating;\n              const yearMatches =\n                selectedYear === \"\" ||\n                new Date(movie.release_date).getFullYear().toString() ===\n                  selectedYear;\n\n              return genreMatches && ratingMatches && yearMatches;\n            })\n            .map((movie) => <MovieCard key={movie.id} movie={movie} />)\n        ) : (\n          <p>No movies foundðŸ˜¢</p>\n        )}\n      </div>\n    </PageTitle>\n  );\n}\n\nconst PageTitle = styled.div`\n  h1 {\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    font-size: 3.5rem;\n    text-shadow: #fff 1px 0 5px;\n  }\n`;\n\nconst Filters = styled.div`\n  border: 1px solid #e3e3e3;\n  background-color: #8a2be2;\n  border-radius: 10px;\n  display: flex;\n  margin: 6rem auto;\n  width: 85%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FilterColumn = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}