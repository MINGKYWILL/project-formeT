{"ast":null,"code":"var _jsxFileName = \"/Users/mj/Downloads/mini_project-main/formeT website/src/api/axios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Import Axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction YourComponent() {\n  _s();\n  const [movies, setMovies] = useState([]); // Define the movies state\n\n  const getMovies = async () => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=YOUR_API_KEY&language=en-US&limit=50`);\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    getMovies();\n  }, []); // Make sure to pass an empty dependency array to useEffect\n\n  // Rest of your component code here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_s(YourComponent, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","YourComponent","_s","movies","setMovies","getMovies","response","get","console","log","data","results","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mj/Downloads/mini_project-main/formeT website/src/api/axios.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Import Axios\n\nfunction YourComponent() {\n  const [movies, setMovies] = useState([]); // Define the movies state\n\n  const getMovies = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=YOUR_API_KEY&language=en-US&limit=50`\n      );\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []); // Make sure to pass an empty dependency array to useEffect\n\n  // Rest of your component code here\n\n  return <div>{/* Render your movies data here */}</div>;\n}\n\nexport default YourComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC7B,0FACH,CAAC;MACDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;MAClCP,SAAS,CAACE,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;;EAEA,oBAAOL,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA8C,CAAC;AACxD;AAACd,EAAA,CAtBQD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}